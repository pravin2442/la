# Exercise 5a: Linear Regression - Area vs Price
# ------------------------------------------------
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# Step 1: Create dataset
# Sample data: Area (sq ft) vs Price (in lakhs)
data = {
    'Area': [500, 1000, 1500, 2000, 2500, 3000, 3500, 4000],
    'Price': [30, 50, 70, 85, 110, 130, 150, 165]
}
df = pd.DataFrame(data)

# Step 2: Prepare features (X) and labels (y)
X = df[['Area']]  # 2D array
y = df['Price']   # 1D array

# Step 3: Split into training and testing sets (80-20 split)
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Step 4: Create and train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 5: Make predictions on the test set
y_pred = model.predict(X_test)

# Step 6: Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)
print("Model Coefficient (slope):", model.coef_[0])
print("Model Intercept:", model.intercept_)

# Step 7: Predict price for a new area
new_area = 3200
predicted_price = model.predict([[new_area]])
print(f"Predicted price for {new_area} sq ft: {predicted_price[0]:.2f} lakhs")

# Step 8: Plot actual data and regression line
plt.figure(figsize=(8, 5))
plt.scatter(X, y, color='blue', label='Actual Data')  # Actual points
plt.plot(X, model.predict(X), color='red', linewidth=2, label='Regression Line')  # Predicted line
plt.xlabel('Area (sq ft)')
plt.ylabel('Price (lakhs)')
plt.title('Linear Regression: Area vs Price')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
